name: dev_ecr_build
on:
  push:
    branches:
      - 'dev'

jobs:
  deploy:
    name: Deploy ECR Registry in Dev
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Get runtime vars
        run: |
          echo "SHA = ${{ github.sha }}"
          echo "github event ref = ${{ github.event.ref }}"
          echo "github ref = ${{ github.ref }}"
          echo "test update"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Vinnie
        run: |
          # Setup git user
          git config --global user.email "watson.ops@gmail.com"
          git config --global user.name "WatsonOps"
          # Install vinnie
          pip install vinnie
          #VINNIE_CURRENT_VERSION=$(vinnie --prefix=dev-v version)
          #echo "VINNIE_CURRENT_VERSION=$VINNIE_CURRENT_VERSION" >> $GITHUB_ENV
          #echo "$VINNIE_CURRENT_VERSION"
          #echo "Patch version"
          #vinnie --prefix=dev-v patch
          #export VINNIE_VERSION=`cat vinnie.txt`
          #echo "vinnie_version=$VINNIE_VERSION" >> $GITHUB_ENV
          # Set git tag and push
          #git tag $VINNIE_VERSION
          #git push --tags

      - name: Get first current version
        run: |
          vinnie --prefix=dev-v version

      - name: Get current version
        run: |
          # Setup git user
          git config --global user.email "watson.ops@gmail.com"
          git config --global user.name "WatsonOps"
          # Install vinnie
          pip install vinnie
          # Get next version and pass along in the environment
          # vinnie --prefix=dev-v patch
          VINNIE_VERSION=$(vinnie --prefix=dev-v version)
          echo "VINNIE_VERSION=$VINNIE_VERSION" >> $GITHUB_ENV
          echo "current version $VINNIE_VERSION"

      - name: Configure AWS credentials - dev
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGE }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGE }}
          aws-region: us-east-1



