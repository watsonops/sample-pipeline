@* Licensed to the Medulla Contributors under one or more agreements. *@
@* The Medulla Contributors licenses this file to you under the Apache 2.0 license. *@
@* See the LICENSE file in the project root for more information. *@

<div class="TimelineItem-badge">
    @if (PropertyMenuStructureNode.HasNoChildren())
    {
        <svg style="width:16px;" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M18 12H6" />
        </svg>
    }
    else
    {
        @if (PropertyMenuStructureNode.IsOpen)
        {
            <svg style="width:16px;cursor:pointer;" @onclick="Close" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path></svg>
        }
        else
        {
            <svg @onclick="Open" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" style="transform: rotate(-90deg); width: 16px;cursor:pointer;"><path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path></svg>

        }
    }
</div>

@code {

    /// <summary>
    /// The menu structure to be rendered.
    /// </summary>
    [Parameter]
    public PropertyMenuStructureNode PropertyMenuStructureNode { get; set; } = new();

    /// <summary>
    /// Provide a reference to the parent PropertiesMenu component so that child component can call ShouldRender.
    /// </summary>
    [Parameter]
    public PropertiesMenu? PropertiesMenu { get; set; }

    private void Open()
    {
        PropertyMenuStructureNode.IsOpen = true;
        PropertiesMenu?.ShouldRender();
    }

    private void Close()
    {
        PropertyMenuStructureNode.IsOpen = false;
        PropertiesMenu?.ShouldRender();
    }

}
